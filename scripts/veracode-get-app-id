#!/bin/bash
set -euo pipefail

timestamp() {
	/usr/bin/date -Ins -u
}

say() {
	echo -e "$(timestamp): ${@}"
}

fail() {
	say "❌ ${@}" 1>&2
	exit ${EXIT_CODE:-1}
}

usage() {
	echo -e "usage: ${BASH_ARGV0:-${BASH_SOURCE:-${0}}} appName" 1>&2
	exit 1
}

[ ${#} -eq 1 ] || usage

# Get from parameters
APP_NAME="${1}"
[ -n "${APP_NAME}" ] || fail "The application name may not be the empty string"

VERACODE="$(type -P veracode 2>/dev/null)" || fail "The veracode executable could not be found in the PATH"
XMLSTARLET="$(type -P xmlstarlet 2>/dev/null)" || fail "The xmlstarlet executable could not be found in the PATH"

[ -v VERACODE_API_KEY_ID ] || fail "The VERACODE_API_KEY_ID variable is not set, cannot continue"
[ -n "${VERACODE_API_KEY_ID}" ] || fail "The VERACODE_API_KEY_ID variable has an empty value, cannot continue"
[ -v VERACODE_API_KEY_SECRET ] || fail "The VERACODE_API_KEY_SECRET variable is not set, cannot continue"
[ -n "${VERACODE_API_KEY_SECRET}" ] || fail "The VERACODE_API_KEY_SECRET variable has an empty value, cannot continue"

XML="$("${VERACODE}" -action getapplist)" || fail "Failed to retrieve the application list"

# Find the application with the correct (case-sensitive) name, and spit
# out the Application ID

APP_ID="$("${XMLSTARLET}" sel -N "al=https://analysiscenter.veracode.com/schema/2.0/applist" -t -v "/al:applist/al:app[@app_name='${APP_NAME}']/@app_id" <<< "${XML}")" || exit ${?}
echo "${APP_ID}"
exit 0
