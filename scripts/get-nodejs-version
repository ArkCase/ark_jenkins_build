#!/bin/bash
SCRIPT="$(readlink -f "${BASH_SOURCE:-${0}}")"
BASEDIR="$(dirname "${SCRIPT}")"
SCRIPT="$(basename "${SCRIPT}")"

FUNCTIONS="${BASEDIR}/.functions"
if ! . "${FUNCTIONS}" ; then
	echo -e "ERROR: Failed to load the base functions from [${FUNCTIONS}]"
	exit 1
fi
unset FUNCTIONS

nodejs_list_libraries()
{
	local DIR="${1}"
	local ANGULAR_JSON="${DIR}/angular.json"
	if check_file_readable "${ANGULAR_JSON}" ; then
		ANGULAR_JSON="$(readlink -f "${ANGULAR_JSON}")"
		jq -r '.projects[] | select (.projectType=="library") | .root' "${ANGULAR_JSON}" | sort -u
		return ${PIPESTATUS[0]}
	fi

	find . -type f -name "${PACKAGE_JSON}" -printf "%h\n" | \
		egrep -v "^[.]$" | \
		egrep -v '^[.]/dist/' | \
		sed -e 's;^[.]/;;g' | \
		sort
	return ${PIPESTATUS[0]}
}

usage()
{
	echo -e "usage: ${BASH_ARGV0} [directory]"
	exit 1
}

# If no directory list is given, assume the first directory will be the current one
check_help_flag "${@}" && usage
[ ${#} -gt 1 ] && usage
[ ${#} -lt 1 ] && set -- "."

DIR="${1}"

PACKAGE_JSON="package.json"
ANGULAR_JSON="angular.json"

check_dir_readable "${DIR}" || fail "The directory [${DIR}] must be readable"
DIR="$(readlink -f "${DIR}")"

cd "${DIR}" || fail "Failed to CD into [${DIR}]"

check_file_readable "${PACKAGE_JSON}" || fail "The file [${PACKAGE_JSON}] must be readable"

VERSION="$(jq -r ".version" < "${PACKAGE_JSON}")" || fail "Failed to read the JSON in [${PACKAGE_JSON}] in [${DIR}] to get the version number ($?)"
echo -e "${PACKAGE_JSON} : ${VERSION}"
while read LIB ; do
	JSON="${LIB}/${PACKAGE_JSON}"
	check_file_readable "${JSON}" || fail "The JSON file [${JSON}] must be readable (${?})"
	VERSION="$(jq -r ".version" < "${JSON}")" || fail "Failed to read the JSON in [${JSON}] to get the version number ($?)"
	echo -e "${JSON} : ${VERSION}"
# done < <(find "${DIR}" -type f -name "${PACKAGE_JSON}" | sort)
done < <(nodejs_list_libraries "${DIR}")
