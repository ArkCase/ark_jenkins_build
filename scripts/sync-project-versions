#!/bin/bash
SCRIPT="$(readlink -f "${BASH_SOURCE:-${0}}")"
BASEDIR="$(dirname "${SCRIPT}")"
SCRIPT="$(basename "${SCRIPT}")"

FUNCTIONS="${BASEDIR}/.functions"
if ! . "${FUNCTIONS}" ; then
	echo -e "ERROR: Failed to load the base functions from [${FUNCTIONS}]"
	exit 1
fi
unset FUNCTIONS

usage()
{
	echo -e "usage: ${BASH_ARGV0} [directory] [-h|-?|--help]"
	exit 1
}

is_angular()
{
	local DIR="${1}"
	check_file_readable "${DIR}/${PACKAGE_JSON}" || return 1
	check_file_readable "${DIR}/${ANGULAR_JSON}" || return 1
	return 0
}

get_angular_version()
{
	local DIR="${1}"
	local JSON="${DIR}/${PACKAGE_JSON}"
	check_file_readable "${JSON}" || return 1
	jq -r ".version" < "${JSON}"
	return ${?}
}

is_maven()
{
	local DIR="${1}"
	check_file_readable "${DIR}/${POM_XML}" || return 1
	return 0
}

get_maven_version()
{
	local DIR="${1}"
	local POM_XML="${DIR}/${POM_XML}"
	check_file_readable "${POM_XML}" || return 1
	( cd "${DIR}" && mvn help:evaluate -Dexpression=project.version -q -DforceStdout ) || return 1
	return 0
}

check_help_flag "${@}" && usage
[ ${#} -gt 1 ] && usage
[ ${#} -lt 1 ] && set -- "."

PACKAGE_JSON="package.json"
ANGULAR_JSON="angular.json"
POM_XML="pom.xml"

DIR="${1}"

check_dir_readable "${DIR}" || fail "The directory [${DIR}] must be readable"

# We're only interested in projects that have both POM files
# and angular files
is_angular "${DIR}" || exit 0
is_maven "${DIR}" || exit 0

# 1) get the version from package.json
NODEJS_VERSION="$(get_angular_version "${DIR}")"
[ -n "${NODEJS_VERSION}" ] || fail "Failed to read the NodeJS version from [${DIR}/${PACKAGE_JSON}]"
# 2) get the version from pom.xml
MAVEN_VERSION="$(get_maven_version "${DIR}")"
[ -n "${MAVEN_VERSION}" ] || fail "Failed to read the Maven version from [${DIR}/${POM_XML}]"

[ "${NODEJS_VERSION}" != "${MAVEN_VERSION}" ] || exit 0

# TODO: Allow for a parameter that describes *which* version to use?
VERSION="${NODEJS_VERSION}"

# 3) Synchronize the versions
say "Synchronizing all version numbers to [${VERSION}] for [${DIR}]"
exec "${BASEDIR}/set-project-version" "${VERSION}" "${DIR}"
